const {app, protocol} = require('electron');
var File = require('file_main');
var config = require('config.json');

var leanoteProtocol = {
	destroy: function (callback) {
		protocol.unregisterProtocol(config.appName, function () {
			callback();
		});
	},
	init: function () {
		// 先注销, 为了防止刷新
		// this.destroy(funciton () {
			protocol.registerFileProtocol(config.appName, function(request, callback) {
				// console.log(request.url);
				var url = request.url;
				var ret = /fileId=([a-zA-Z0-9]{24})/.exec(url);
				if (ret && ret[1]) {
					var fileId = ret[1];
					// console.log('imageId: ' + fileId);
					
					File.getImage(ret[1], function(fileLocalPath) {
						if(fileLocalPath) {
							// console.log(fileId + ' : ' + fileLocalPath);
							callback({path: fileLocalPath});
						} else {
							console.log('取不到图片: ' + fileId);
							callback();
						}
					});
				}

				else {
					// js, 请求, 导出pdf
					console.log(url);
					var prefix = config.appName + '://public';
					if (url.substr(0, prefix.length) == prefix) {
						var path = app.getAppPath() + url.substr((config.appName + ':/').length);
						if (path.indexOf('?') >= 0) {
							path = path.substr(0, path.indexOf('?'));
						}
						callback({path: path});
					}
				}
				// var url = request.url.substr(7);
				// callback({path: '/Users/life/Desktop/newicon/blog@2x.png'});
			}, function (error) {
				if (error) {
				    console.error('Failed to register protocol')
				    console.error(error);
				}
			});
		// });
	}

}

module.exports = leanoteProtocol;
